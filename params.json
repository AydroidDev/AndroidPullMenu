{
  "name": "AndroidPullMenu",
  "tagline": "An Android Library that allows users to pull down a menu where they can select different actions when pulling down. It can be implemented inside ScrollView, GridView, ListView.",
  "body": "## Introduction\r\nAndroidPullMenu is an Open Source Android library that allows developers to easily create applications with pull menu. The aim of this library is to allow users that with a simple pull gesture to choose actions that they want to be executed.\r\n\r\nThis actions stand for refreshing options like refreshing the latest news, most viewed news, most commented views etc. or adding more actions inside view when you donâ€™t want to implement these actions inside sliding menu. It can be implemented inside ScrollView, GridView, ListView.\r\n\r\n![](/images/pull_menu_sample_1.gif)\r\n\r\n\r\n## Simple Example\r\nThe implementation should be easy if you are familiar with this library: [ActionBar-PullToRefresh](https://github.com/chrisbanes/ActionBar-PullToRefresh)\r\n\r\n**Java code:**\r\n\r\n```\r\n    public class MainActivity extends ActionBarActivity implements OnRefreshListener{\r\n\r\n    private PullMenuLayout mPullMenuLayout;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_scrollview);\r\n\r\n        // Now find the PullMenuLayout and set it up\r\n        mPullMenuLayout = (PullMenuLayout) findViewById(R.id.pm_layout);\r\n\r\n        ArrayList<String> mList = new ArrayList<String>();\r\n        mList.add(\"Top Stories\");\r\n        mList.add(\"Most Recent\");\r\n        mList.add(\"Interest\");\r\n        mList.add(\"Refresh\"); \r\n\r\n        // We can now setup the PullMenuLayout\r\n        ActionBarPullMenu.from(this)\r\n                .allChildrenArePullable()\r\n                .listener(this)\r\n                .setup(mPullMenuLayout,android.R.color.white,mList);\r\n    }\r\n\r\n    @Override\r\n    public void onRefreshStarted(View view, int position, String selectedField) {\r\n            Toast.makeText(MainActivity.this, position + \" # \"+selectedField, Toast.LENGTH_SHORT).show();\r\n        /**\r\n         * Simulate Refresh with 4 seconds sleep\r\n         */\r\n        new AsyncTask<Void, Void, Void>() {\r\n\r\n            @Override\r\n            protected Void doInBackground(Void... params) {\r\n                try {\r\n                    Thread.sleep(Constants.SIMULATED_REFRESH_LENGTH);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                return null;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(Void result) {\r\n                super.onPostExecute(result);\r\n                // Notify PullMenuLayout that the refresh has finished\r\n                mPullMenuLayout.setRefreshComplete();\r\n            }\r\n        }.execute();\r\n    }   \r\n    }\r\n```\r\n\r\n**XML Code:**\r\n\r\n```\r\n    <al.shkurti.pullmenu.library.PullMenuLayout\r\n          xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n          android:id=\"@+id/pm_layout\"\r\n          android:layout_width=\"match_parent\"\r\n          android:layout_height=\"match_parent\">\r\n \r\n      <ScrollView\r\n          android:id=\"@+id/scrollview\"\r\n          android:layout_width=\"fill_parent\"\r\n          android:layout_height=\"fill_parent\"\r\n          android:padding=\"8dp\"\r\n          android:scrollbarStyle=\"outsideInset\">\r\n\r\n          <TextView\r\n              android:layout_width=\"fill_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:text=\"@string/_text\"/>\r\n\r\n      </ScrollView>\r\n    </al.shkurti.pullmenu.library.PullMenuLayout>\r\n```\r\n\r\n\r\n## Sample:\r\n\r\n[Android pull menu sample apk](https://drive.google.com/file/d/0B4KDLGM9RvIyR2djZVVyNDQ4Mlk/view?usp=sharing)\r\n\r\n\r\n## Developed by:\r\n-\tArmando Shkurti\r\n\r\n\r\n## Credits:\r\nInspired by:\r\n-\t_Fabrizio Bianchi_ - [Pull Menu Interaction Concept](https://dribbble.com/shots/1827600-Pull-Menu-Menu-Interaction-Concept?list=users&offset=0) \r\ndemonstration of his [work in codepen.io](http://codepen.io/fbrz/full/bNdMwZ/):\r\n\r\n![concept](images/pull_menu_concept.gif)\r\n\r\n- [Jolla Sailfish OS - Tell me about the pulley menu](https://www.youtube.com/watch?v=sR9dWo42wU0 \"Jolla Sailfish  OS\")\r\n\r\n\r\n## Opinions for this concept:\r\nhttps://news.layervault.com/stories/40871-pull-menu-menu-interaction-concept\r\n\r\n## Special Thanks\r\n[@chrisbanes](https://github.com/chrisbanes):  https://github.com/chrisbanes/ActionBar-PullToRefresh\r\n\r\n[@jpardogo](https://github.com/jpardogo) and [@astuetz](https://github.com/astuetz/):   https://github.com/jpardogo/PagerSlidingTabStrip\\\r\n\r\n[@castorflex](https://github.com/castorflex):  https://github.com/castorflex/SmoothProgressBar\r\n\r\n\r\n## License\r\n\r\nFeel free to use it in your Android apps and also include the license in your app. I would be grateful if you would inform me about its usage\r\n\r\n```\r\n    Copyright 2015 Armando Shkurti\r\n    \r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n```\r\n\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-AndroidPullMenu-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1449)",
  "google": "UA-58885801-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}